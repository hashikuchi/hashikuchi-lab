name: Test and Deploy to Production

on:
  push:
    branches: [ master ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test-and-deploy-production:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"
        cache: "npm"
        cache-dependency-path: lab-client/package-lock.json

    - name: Install dependencies
      working-directory: lab-client
      run: npm ci

    - name: Install Playwright browsers
      working-directory: lab-client
      run: npx playwright install --with-deps

    - name: Build application
      working-directory: lab-client
      run: npm run build

    - name: Start application in background
      working-directory: lab-client
      run: |
        npm run start &
        sleep 10

    - name: Run Playwright tests
      working-directory: lab-client
      run: npx playwright test

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report-production
        path: lab-client/playwright-report/
        retention-days: 30

    - name: Set up Docker Buildx
      if: success()
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure Container Registry
      if: success()
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_SERVER_NAME }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build Docker image
      if: success()
      working-directory: lab-client
      run: docker build -t lab-client .

    - name: Generate timestamp
      if: success()
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

    - name: Tag and push Docker image (Production)
      if: success()
      working-directory: lab-client
      run: |
        docker tag lab-client ${{ secrets.ACR_SERVER_NAME }}/lab-client:latest
        docker tag lab-client ${{ secrets.ACR_SERVER_NAME }}/lab-client:${{ steps.timestamp.outputs.timestamp }}
        docker push ${{ secrets.ACR_SERVER_NAME }}/lab-client:latest
        docker push ${{ secrets.ACR_SERVER_NAME }}/lab-client:${{ steps.timestamp.outputs.timestamp }}

    - name: Create Git tag
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag ${{ steps.timestamp.outputs.timestamp }}
        git push origin ${{ steps.timestamp.outputs.timestamp }}

    - name: Login to Azure CLI for Production Deploy
      if: success()
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Production Container App
      if: success()
      run: |
        # Set variables for production app
        PRODUCTION_APP_NAME="hashikuchi-lab-client"
        RESOURCE_GROUP="${{ secrets.AZURE_RESOURCE_GROUP }}"
        
        echo "Updating production app: $PRODUCTION_APP_NAME with latest image"
        az containerapp update \
          --name $PRODUCTION_APP_NAME \
          --resource-group $RESOURCE_GROUP \
          --image ${{ secrets.ACR_SERVER_NAME }}/lab-client:latest
        
        echo "Production app updated successfully with image: ${{ secrets.ACR_SERVER_NAME }}/lab-client:latest"
        echo "Timestamped version also available as: ${{ secrets.ACR_SERVER_NAME }}/lab-client:${{ steps.timestamp.outputs.timestamp }}"